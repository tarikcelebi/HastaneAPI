// <auto-generated />
using System;
using HastaneAPI.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HastaneAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240128191436_HospitalAPIDB")]
    partial class HospitalAPIDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HastaneAPI.Entities.Hospital", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HospitalName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Hospitals");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Address = "Şişli,İstanbul",
                            HospitalName = "Şişli Eftal"
                        },
                        new
                        {
                            ID = 2,
                            Address = "Bakırköy,Istanbul",
                            HospitalName = "Bakırköy Sadi Konuk"
                        });
                });

            modelBuilder.Entity("HastaneAPI.Entities.Patient", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime>("ControlDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HastaneID")
                        .HasColumnType("int");

                    b.Property<string>("Klinik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("HastaneID");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            ControlDate = new DateTime(2023, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "John",
                            HastaneID = 1,
                            Klinik = "deri ve zührevi hastlıkları",
                            LastName = "Doe"
                        },
                        new
                        {
                            ID = 2,
                            ControlDate = new DateTime(2023, 12, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Jeyn",
                            HastaneID = 2,
                            Klinik = "Üroloji ve zührevi hastlıkları",
                            LastName = "Doe"
                        });
                });

            modelBuilder.Entity("HastaneAPI.Entities.Patient", b =>
                {
                    b.HasOne("HastaneAPI.Entities.Hospital", "Hastane")
                        .WithMany("Hastalar")
                        .HasForeignKey("HastaneID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hastane");
                });

            modelBuilder.Entity("HastaneAPI.Entities.Hospital", b =>
                {
                    b.Navigation("Hastalar");
                });
#pragma warning restore 612, 618
        }
    }
}
